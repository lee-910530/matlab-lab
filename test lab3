clc;
close all;
clear all;
%..........
%.......data........
h = 0.05;
fin = 1500;
tn = 0:h:fin

G_pat1(1) = 70;
X_pat1(1) = 0;
I_pat1(1) = 7;
G_pat2(1) = 70;
X_pat2(1) = 0;
I_pat2(1) = 7;
G_pat3(1) = 70;
X_pat3(1) = 0;
I_pat3(1) = 7;

% N = -0.5;
% Z = -0.4;
% PS = 0.2;
% PM = 0.5;
% PB = 0.8;
% PL = 1;

NB = -4;
NS = -2;
Z = 0;
PS = 0.1;
PM = 0.5;
PB = 0.7;
PL = 2;


e1_d(1) = 0;
e2_d(1) = 0;
e3_d(1) = 0;


x = fin/h;
% %..........glucose concentration-input1...........
% x1 = -8:0.02:6;
% NL = trapezoid_up_wave(x1,-6,-5);
% NB = triangle_wave(x1,-6,-2,0);
% NM = triangle_wave(x1,-5,-1.5,-1);
% NS = triangle_wave(x1,-2,-1,0);
% NOM = triangle_wave(x1,-1,0,2);
% P = trapezoid_down_wave(x1,0,3);
% 
% figure('name','error-input1');
% plot(x1,NL,"b",x1,NB,"g",x1,NM,"r",x1,NS,"c",x1,NOM,"k");
% hold on;
% plot(x1,P,"Color","#E020F0")
% legend({'NL','NB','NM','NS','NOM','P'})
% 
% title('error-input1')
% xlabel("error glucose concentration(mg/dl)")
% 
% %..........glucose deviation-input2...........
% x2 = -1:0.002:1;
% neg = trapezoid_up_wave(x2,-0.1,0);
% zero = triangle_wave(x2,-0.1,0,0.1);
% pos = trapezoid_down_wave(x2,0,0.1);
% legend({'neg','zero','pos'})
% figure('name','glucose deviation-input2');
% plot(x2,neg,"b",x2,zero,"g",x2,pos,"r");
% title('error deviation-input2')
% xlabel("error glucose deviation(mg/dl)")
% xlim([-0.2,0.2])
% 
% %..........insulin infusion rate-output...........
% y = -3:0.0005:3;
% N_o = triangle_wave(y,-0.6,-0.5,-0.4);
% Z_o = triangle_wave(y,-0.4,-0.3,-0.2);
% PS_o = triangle_wave(y,0.05,0.15,0.25);
% PM_o = triangle_wave(y,0.1,0.2,0.3);
% PB_o = triangle_wave(y,0.2,0.3,0.4);
% PL_o = triangle_wave(y,0.4,0.5,0.6);
% 
% figure('name','insulin infusion rate-output');
% plot(y,N_o,"b",y,Z_o,"r",y,PS_o,"c",y,PL_o,"k");
% hold on;
% plot(y,PM_o,"Color","#E020F0")
% hold on;
% plot(y,PB_o,"Color","#E09010")
% legend({'N','Z','PS','PL','PM','PB'})
% title("insulin infusion rate-output")
% xlabel("insulin infusion rate(microU/min/mg)")
% xlim([-1,1])

%.............patient3................
num = 1;
for i = tn
    e1(num) = 70 - G_pat1(num);
    if num ~= 1
        e1_d(num) = (e1(num)-e1(num-1))/0.05;
    end

    q1 = e1(num);
    q2 = e1_d(num);

    [mu1,mu2,mu3,mu4,mu5,mu6,mu7,mu8,mu9,mu10] = MU(q1,q2);
        
    w1 = min(mu1,mu8); %pl
    w2 = min(mu1,mu9); %pl
    w3 = min(mu1,mu10); %pl
    w4 = min(mu2,mu8); %pl
    w5 = min(mu2,mu9); %pb
    w6 = min(mu2,mu10); %pb
    w7 = min(mu3,mu8); %pm
    w8 = min(mu3,mu9);  %pm
    w9 = min(mu3,mu10);%pm
    w10 = min(mu4,mu8); %ps
    w11 = min(mu4,mu9);%ps
    w12 = min(mu4,mu10);%ps
    w13 = min(mu5,mu8); %z
    w14 = min(mu5,mu9);%z
    w15 = min(mu5,mu10);%z
    w16 = min(mu6,mu8); %ns
    w17 = min(mu6,mu9);%ns
    w18 = min(mu6,mu10);%nb
    w19 = min(mu7,mu8); %nb
    w20 = min(mu7,mu9);%nb
    w21 = min(mu7,mu10);%nb
 
    NB_o = NB;
    NS_o = NS;
    Z_o = Z;
    PS_o = PS;
    PM_o = PM;
    PB_o = PB;
    PL_o = PL;
    
    nn = (w1*PL_o+w2*PL_o+w3*PL_o+w4*PB_o+w5*PB_o+w6*PB_o+w7*PM_o+w8*PM_o+w9*PM_o+w10*PS_o ...
        +w11*PS_o+w12*PS_o+w13*Z_o+w14*Z_o+w15*Z_o+w16*NS_o+w17*NS_o+w18*NB_o+w19*NB_o+w20*NB_o+w21*NB_o)...
        /(w1+w2+w3+w4+w5+w6+w7+w8+w9+w10+w11+w12+w13+w14+w15+w16+w17+w18+w19+w20+w21);

    U1(num) = sat(nn);

    k1 = G_p1(i,G_pat1(num),X_pat1(num),I_pat1(num));
    l1 = X_p1(i,G_pat1(num),X_pat1(num),I_pat1(num));
    j1 = I_p1(i,G_pat1(num),X_pat1(num),I_pat1(num),U1(num));

    k2 = G_p1(i + h/2,G_pat1(num) + h*k1/2,X_pat1(num) + h*l1/2,I_pat1(num) + h*j1/2);
    l2 = X_p1(i + h/2,G_pat1(num) + h*k1/2,X_pat1(num) + h*l1/2,I_pat1(num) + h*j1/2);
    j2 = I_p1(i + h/2,G_pat1(num) + h*k1/2,X_pat1(num) + h*l1/2,I_pat1(num) + h*j1/2,U1(num));

    k3 = G_p1(i + h/2,G_pat1(num) + h*k2/2,X_pat1(num) + h*l2/2,I_pat1(num) + h*j2/2);
    l3 = X_p1(i + h/2,G_pat1(num) + h*k2/2,X_pat1(num) + h*l2/2,I_pat1(num) + h*j2/2);
    j3 = I_p1(i + h/2,G_pat1(num) + h*k2/2,X_pat1(num) + h*l2/2,I_pat1(num) + h*j2/2,U1(num));
    
    k4 = G_p1(i + h,G_pat1(num) + h*k3,X_pat1(num) + h*l3,I_pat1(num) + h*j3);
    l4 = X_p1(i + h,G_pat1(num) + h*k3,X_pat1(num) + h*l3,I_pat1(num) + h*j3);
    j4 = I_p1(i + h,G_pat1(num) + h*k3,X_pat1(num) + h*l3,I_pat1(num) + h*j3,U1(num));
    
    if num < x +1
        G_pat1(num+1) = G_pat1(num) + h*(k1+2*k2+2*k3+k4)/6;
        X_pat1(num+1) = X_pat1(num) + h*(l1+2*l2+2*l3+l4)/6;
        I_pat1(num+1) = I_pat1(num) + h*(j1+2*j2+2*j3+j4)/6;
    end
%.......................patient2................................
    e2(num) = 70 - G_pat2(num);
    if num ~= 1
        e2_d(num) = (e2(num)-e2(num-1))/0.05;
    end

    q1 = e2(num);
    q2 = e2_d(num);

    [mu1,mu2,mu3,mu4,mu5,mu6,mu7,mu8,mu9,mu10] = MU(q1,q2);
        
    w1 = min(mu1,mu8); %pl
    w2 = min(mu1,mu9); %pl
    w3 = min(mu1,mu10); %pl
    w4 = min(mu2,mu8); %pl
    w5 = min(mu2,mu9); %pb
    w6 = min(mu2,mu10); %pb
    w7 = min(mu3,mu8); %pm
    w8 = min(mu3,mu9);  %pm
    w9 = min(mu3,mu10);%pm
    w10 = min(mu4,mu8); %ps
    w11 = min(mu4,mu9);%ps
    w12 = min(mu4,mu10);%ps
    w13 = min(mu5,mu8); %z
    w14 = min(mu5,mu9);%z
    w15 = min(mu5,mu10);%z
    w16 = min(mu6,mu8); %ns
    w17 = min(mu6,mu9);%ns
    w18 = min(mu6,mu10);%nb
    w19 = min(mu7,mu8); %nb
    w20 = min(mu7,mu9);%nb
    w21 = min(mu7,mu10);%nb
 
    NB_o = NB;
    NS_o = NS;
    Z_o = Z;
    PS_o = PS;
    PM_o = PM;
    PB_o = PB;
    PL_o = PL;
    
    nn = (w1*PL_o+w2*PL_o+w3*PL_o+w4*PB_o+w5*PB_o+w6*PB_o+w7*PM_o+w8*PM_o+w9*PM_o+w10*PS_o ...
        +w11*PS_o+w12*PS_o+w13*Z_o+w14*Z_o+w15*Z_o+w16*NS_o+w17*NS_o+w18*NB_o+w19*NB_o+w20*NB_o+w21*NB_o)...
        /(w1+w2+w3+w4+w5+w6+w7+w8+w9+w10+w11+w12+w13+w14+w15+w16+w17+w18+w19+w20+w21);

    U2(num) = sat(nn);

    k1 = G_p2(i,G_pat2(num),X_pat2(num),I_pat2(num));
    l1 = X_p2(i,G_pat2(num),X_pat2(num),I_pat2(num));
    j1 = I_p2(i,G_pat2(num),X_pat2(num),I_pat2(num),U2(num));

    k2 = G_p2(i + h/2,G_pat2(num) + h*k1/2,X_pat2(num) + h*l1/2,I_pat2(num) + h*j1/2);
    l2 = X_p2(i + h/2,G_pat2(num) + h*k1/2,X_pat2(num) + h*l1/2,I_pat2(num) + h*j1/2);
    j2 = I_p2(i + h/2,G_pat2(num) + h*k1/2,X_pat2(num) + h*l1/2,I_pat2(num) + h*j1/2,U2(num));

    k3 = G_p2(i + h/2,G_pat2(num) + h*k2/2,X_pat2(num) + h*l2/2,I_pat2(num) + h*j2/2);
    l3 = X_p2(i + h/2,G_pat2(num) + h*k2/2,X_pat2(num) + h*l2/2,I_pat2(num) + h*j2/2);
    j3 = I_p2(i + h/2,G_pat2(num) + h*k2/2,X_pat2(num) + h*l2/2,I_pat2(num) + h*j2/2,U2(num));
    
    k4 = G_p2(i + h,G_pat2(num) + h*k3,X_pat2(num) + h*l3,I_pat2(num) + h*j3);
    l4 = X_p2(i + h,G_pat2(num) + h*k3,X_pat2(num) + h*l3,I_pat2(num) + h*j3);
    j4 = I_p2(i + h,G_pat2(num) + h*k3,X_pat2(num) + h*l3,I_pat2(num) + h*j3,U2(num));
    


    if num < x +1
        G_pat2(num+1) = G_pat2(num) + h*(k1+2*k2+2*k3+k4)/6;
        X_pat2(num+1) = X_pat2(num) + h*(l1+2*l2+2*l3+l4)/6;
        I_pat2(num+1) = I_pat2(num) + h*(j1+2*j2+2*j3+j4)/6;
    end

    %.......................patient3................................
    e3(num) = 70 - G_pat3(num);
    if num ~= 1
        e3_d(num) = (e3(num)-e3(num-1))/0.05;
    end

    q1 = e3(num);
    q2 = e3_d(num);

    [mu1,mu2,mu3,mu4,mu5,mu6,mu7,mu8,mu9,mu10] = MU(q1,q2);
        
    w1 = min(mu1,mu8); %pl
    w2 = min(mu1,mu9); %pl
    w3 = min(mu1,mu10); %pl
    w4 = min(mu2,mu8); %pl
    w5 = min(mu2,mu9); %pb
    w6 = min(mu2,mu10); %pb
    w7 = min(mu3,mu8); %pm
    w8 = min(mu3,mu9);  %pm
    w9 = min(mu3,mu10);%pm
    w10 = min(mu4,mu8); %ps
    w11 = min(mu4,mu9);%ps
    w12 = min(mu4,mu10);%ps
    w13 = min(mu5,mu8); %z
    w14 = min(mu5,mu9);%z
    w15 = min(mu5,mu10);%z
    w16 = min(mu6,mu8); %ns
    w17 = min(mu6,mu9);%ns
    w18 = min(mu6,mu10);%nb
    w19 = min(mu7,mu8); %nb
    w20 = min(mu7,mu9);%nb
    w21 = min(mu7,mu10);%nb
 
    NB_o = NB;
    NS_o = NS;
    Z_o = Z;
    PS_o = PS;
    PM_o = PM;
    PB_o = PB;
    PL_o = PL;
    
    nn = (w1*PL_o+w2*PL_o+w3*PL_o+w4*PB_o+w5*PB_o+w6*PB_o+w7*PM_o+w8*PM_o+w9*PM_o+w10*PS_o ...
        +w11*PS_o+w12*PS_o+w13*Z_o+w14*Z_o+w15*Z_o+w16*NS_o+w17*NS_o+w18*NB_o+w19*NB_o+w20*NB_o+w21*NB_o)...
        /(w1+w2+w3+w4+w5+w6+w7+w8+w9+w10+w11+w12+w13+w14+w15+w16+w17+w18+w19+w20+w21);

    U3(num) = sat(nn);

    k1 = G_p3(i,G_pat3(num),X_pat3(num),I_pat3(num));
    l1 = X_p3(i,G_pat3(num),X_pat3(num),I_pat3(num));
    j1 = I_p3(i,G_pat3(num),X_pat3(num),I_pat3(num),U3(num));

    k2 = G_p3(i + h/2,G_pat3(num) + h*k1/2,X_pat3(num) + h*l1/2,I_pat3(num) + h*j1/2);
    l2 = X_p3(i + h/2,G_pat3(num) + h*k1/2,X_pat3(num) + h*l1/2,I_pat3(num) + h*j1/2);
    j2 = I_p3(i + h/2,G_pat3(num) + h*k1/2,X_pat3(num) + h*l1/2,I_pat3(num) + h*j1/2,U3(num));

    k3 = G_p3(i + h/2,G_pat3(num) + h*k2/2,X_pat3(num) + h*l2/2,I_pat3(num) + h*j2/2);
    l3 = X_p3(i + h/2,G_pat3(num) + h*k2/2,X_pat3(num) + h*l2/2,I_pat3(num) + h*j2/2);
    j3 = I_p3(i + h/2,G_pat3(num) + h*k2/2,X_pat3(num) + h*l2/2,I_pat3(num) + h*j2/2,U3(num));
    
    k4 = G_p3(i + h,G_pat3(num) + h*k3,X_pat3(num) + h*l3,I_pat3(num) + h*j3);
    l4 = X_p3(i + h,G_pat3(num) + h*k3,X_pat3(num) + h*l3,I_pat3(num) + h*j3);
    j4 = I_p3(i + h,G_pat3(num) + h*k3,X_pat3(num) + h*l3,I_pat3(num) + h*j3,U3(num));
    
    if num < x +1
        G_pat3(num+1) = G_pat3(num) + h*(k1+2*k2+2*k3+k4)/6;
        X_pat3(num+1) = X_pat3(num) + h*(l1+2*l2+2*l3+l4)/6;
        I_pat3(num+1) = I_pat3(num) + h*(j1+2*j2+2*j3+j4)/6;
    end
       num = num +1;
end
% figure(5)
% hold on
% plot(tn,e1)
% plot(tn,e_d)


figure(6)
subplot(3,1,3)
hold on
plot(tn,e1_d,'b')
plot(tn,e2_d,'--r')
plot(tn,e3_d,'--g')
yline(0)
title('e_d')
legend({'patient1','patient2','patient3'},"Location","northeast")
ylabel('(MicroU)/mg/min2')
xlabel('time(min)')

subplot(3,1,2)
hold on
plot(tn,e1,'b')
plot(tn,e2,'--r')
plot(tn,e3,'--g')
yline(7)
legend({'patient1','patient2','patient3'},"Location","northeast")
title('e')
xlabel('time(min)')
ylabel('(MicroU/ml)')

subplot(3,1,1)
hold on
plot(tn,G_pat1,'b')
plot(tn,G_pat2,'--r')
plot(tn,G_pat3,'--g')
yline(70)
legend({'patient1','patient2','patient3'},"Location","northeast")
title('G(t)')
ylabel('(mg/dl)')
xlabel('time(min)')

function g = G_n(t,p1,Gb,G,X,I)
    w = t-500;
    w(w<0) = inf;
    g = -p1*(G-Gb)-X*G + 0.2*exp(-0.02*t)+ 0.2*exp(-0.02*w);
end
  
function x = X_n(t,p2,p3,Ib,G,X,I)
    x = -p2*X+p3*(I-Ib);
end

function i = I_n(t,n,Ib,r,h,G,X,I,u)
    x = max(G-h,0);
    i = -n*(I-Ib)+r*x*t+u;
end


%..........patient1..........
function g_p1 = G_p1(t,G,X,I)
    g_p1 = G_n(t,0,70,G,X,I);
end

function x_p1 = X_p1(t,G,X,I)
    x_p1 = X_n(t,0.02,5.3*10^-6,7,G,X,I);

end

function i_p1 = I_p1(t,G,X,I,u)
 %   i_p1 = I_n(t,0.3,7,0.005,78,G,X,I,u);
     i_p1 = I_n(t,0.3,7,0,78,G,X,I,u);
end

%..........patient2..........
function g_p2 = G_p2(t,G,X,I)
    g_p2 = G_n(t,0,70,G,X,I);
end

function x_p2 = X_p2(t,G,X,I)
    x_p2 = X_n(t,0.0072,2.16*10^-6,7,G,X,I);

end

function i_p2 = I_p2(t,G,X,I,u)
%    i_p2 = I_n(t,0.2456,7,0.0038,77.5783,G,X,I,u);
     i_p2 = I_n(t,0.2456,7,0,77.5783,G,X,I,u);
end

%..........patient3..........
function g_p3 = G_p3(t,G,X,I)
    g_p3 = G_n(t,0,70,G,X,I);
end

function x_p3 = X_p3(t,G,X,I)
    x_p3 = X_n(t,0.0142,9.94*10^-6,7,G,X,I);

end

function i_p3 = I_p3(t,G,X,I,u)
 %   i_p3 = I_n(t,0.2814,7,0.0046,82.9370,G,X,I,u);
     i_p3 = I_n(t,0.2814,7,0,82.9370,G,X,I,u);
end





%..........function...........
function trap = trapezoid_up_wave(t,start,fin)
    num = 0;
    for i = t
        num = num + 1;
        if i < start
            trap(num) = 1;
        elseif i >= fin
            trap(num) = 0;
        elseif i >= start && i < fin
            trap(num) = 1/(start - fin) * (i - fin);
        end
    end
end

function trap = trapezoid_down_wave(t,start,fin)
    num = 0;
    for i = t
        num = num + 1;
        if i < start
            trap(num) = 0;
        elseif i >= fin
            trap(num) = 1;
        elseif i >= start && i < fin
            trap(num) = 1/(fin - start) * (i - start);
        end
    end
end

function tri = triangle_wave(t,start,middle,fin)
    num = 0;
    for i = t
        num = num + 1;
        if i < start
            tri(num) = 0;
        elseif i >= fin
            tri(num) = 0;
        elseif i >= start && i < middle
            tri(num) = 1/(middle-start)*(i-start);
        else 
            tri(num) = 1/(middle-fin)*(i-fin);
        end
    end
end

function mem = tri_member(i,start,middle,fin)
    if i < start
        mem = 0;
    elseif i >= fin
        mem = 0;
    elseif i >= start && i < middle
        mem = 1/(middle-start)*(i-start);
    else 
        mem = 1/(middle-fin)*(i-fin);
    end
end

function mem1 = trape_down_member(i,start,fin)
    if i < start
        mem1 = 0;
    elseif i >= fin
        mem1 = 1;
    elseif i >= start && i < fin
        mem1 = 1/(fin - start) * (i - start);
    end
end

function mem2 = trape_up_member(i,start,fin)
    if i < start
        mem2 = 1;
    elseif i >= fin
        mem2 = 0;
    elseif i >= start && i < fin
        mem2 = 1/(start - fin) * (i - fin);
    end
end

function y=sat(x);

if x<0 
    y=0;
else 
    y=x;
end
end

function [mu1,mu2,mu3,mu4,mu5,mu6,mu7,mu8,mu9,mu10] = MU(q1,q2)
    mu1 = trape_up_member(q1,-5,-4); %NL
    mu2 = tri_member(q1,-4,-3,-2);   %NB
    mu3 = tri_member(q1,-3,-2,-1);     %NM
    mu4 = tri_member(q1,-1,-0.5,-0.1);      %NS
    mu5 = tri_member(q1,-0.1,0,0.1);       %z
    mu6 = tri_member(q1,0.1,0.5,1);        %ps
    mu7 = trape_down_member(q1,1,2);   %pb

    mu8 = trape_up_member(q2,-0.2,-0.1);
    mu9 = tri_member(q2,-0.1,0,0.05);
    mu10 = trape_down_member(q2,0,0.05);

end
